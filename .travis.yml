language: rust
cache:
  directories:
  - cargo_web

rust:
  - stable
  - beta
  - nightly
  - 1.22.0
os:
 - linux
 - windows

addons:
  chrome: stable

matrix:
  exclude:
  - rust: 1.22.0
    os: windows
  include:
    - language: generic
      name: Miri with c2rust
      os: linux
      script:
        - curl --proto '=https' --tlsv1.2 https://build.travis-ci.org/files/rustup-init.sh -sSf | sh -s -- --default-toolchain none -y
        - source $HOME/.cargo/env
        - rustup toolchain install nightly --allow-downgrade -c miri
        - cargo miri setup
        - travis_wait 120 cargo miri test --features="c2rust rand serde recovery endomorphism"
        - travis_wait 120 cargo miri test --features="c2rust rand serde recovery"

script:
  - cargo build --verbose --no-default-features
  - cargo build --verbose --no-default-features --features="serde"
  - cargo build --verbose --no-default-features --features="lowmemory"
  - cargo build --verbose --no-default-features --features="rand"
  - cargo build --verbose --no-default-features --features="rand serde recovery endomorphism"
  - cargo build --verbose --no-default-features --features="fuzztarget recovery"
  - cargo build --verbose --features=rand
  - cargo test --no-run --features=fuzztarget
  - cargo test --verbose --features=rand
  - cargo test --verbose --features="rand rand-std"
  - cargo test --verbose --features="rand serde"
  - cargo test --verbose --features="rand serde recovery endomorphism"
  - cargo build --verbose
  - cargo test --verbose
  - cargo build --verbose --release
  - cargo test --verbose --release
  - cargo run --example sign_verify
  - cargo run --example sign_verify_recovery --features=recovery
  - cargo run --example generate_keys --features=rand
  - if [ ${TRAVIS_RUST_VERSION} == "stable" ]; then cargo doc --verbose --features="rand,serde,recovery,endomorphism"; fi
  - if [ ${TRAVIS_RUST_VERSION} == "nightly" ]; then cargo test --verbose --benches --features=unstable; fi
  - if [ ${TRAVIS_RUST_VERSION} == "nightly" -a "$TRAVIS_OS_NAME" = "linux" ]; then
    cd no_std_test &&
    cargo run --release | grep -q "Verified Successfully";
    fi
